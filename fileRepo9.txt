Id: 
1
ExeStack: 
{ v= 20;{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 0;v= v+ 1) then null
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 0;v= v+ 1) then null
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200
20

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200
20

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->21

Output: 
200
20

FileTable

Heap

Id: 
3
ExeStack: 
{ v= 20;{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
 v= 20
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
 v= 20
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
{{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
{for (v= 0;v< 0;v= v+ 1) then null;fork{Print ( v); v= v+ 1}}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then null;fork{Print ( v); v= v+ 1}}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then null
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then null
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200
20

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200
20

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->21

Output: 
200
20

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200
20

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
200
20

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->21

Output: 
200
20

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for (v= 0;v< 3;v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->20

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->21

Output: 
20

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->21

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->21

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->22

Output: 
20
21

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->22

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->22

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->23

Output: 
20
21
22

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->23

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->23

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
5
ExeStack: 

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->24

Output: 
20
21
22
23

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->24

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->24

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
6
ExeStack: 

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->25

Output: 
20
21
22
23
24

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->25

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->25

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
7
ExeStack: 

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->26

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
8
ExeStack: 

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->27

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
9
ExeStack: 

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->28

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
10
ExeStack: 

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
11
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
11
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
11
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
11
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
11
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
11
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->29

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
11
ExeStack: 

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
12
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
12
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
12
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
12
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
12
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
12
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->30

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
12
ExeStack: 

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
13
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
13
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
13
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
13
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
13
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
13
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->31

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
13
ExeStack: 

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
14
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
14
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
14
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
14
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
14
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
14
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->32

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
14
ExeStack: 

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
15
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
15
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->34

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
15
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->34

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
15
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32

FileTable

Heap

Id: 
1
ExeStack: 
{fork{Print ( v); v= v+ 1}; v= v+ 1}
 while( 3){fork{Print ( v); v= v+ 1}; v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->34

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32
33

FileTable

Heap

Id: 
15
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->33

Output: 
20
21
22
23
24
25
26
27
28
29
30
31
32
33

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 0
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 0
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 0
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 0
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->21

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->21

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->21

Output: 
210

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= v+ 1(v< 3) v= 0) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
3

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
3
30
3

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->4

Output: 
3
30
3

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3
30
3

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3
30
3

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3
30
3

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3
30
3

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->4

Output: 
3
30
3
3

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3
30
3
3

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
3
30
3
3

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->4

Output: 
3
30
3
3

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
12
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
5
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
6
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
7
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
8
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
9
ExeStack: 

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0
0
0
0
0
0
0
0
0

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
5
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
6
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
7
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
8
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
9
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
10
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
12
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
12
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
11
ExeStack: 

SymbolTable: 
v-->2

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
12
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
12
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
12
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
13
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
1
1
1
1
1
1
1
1
1
1
1

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->4

Output: 
1
2
30
3

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->4

Output: 
1
2
30
3

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
2
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
3
ExeStack: 

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

Id: 
4
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
2
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
4
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
2
ExeStack: 

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
3
ExeStack: 

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->3

Output: 
1
2
30
3

FileTable

Heap

LockTable

Id: 
4
ExeStack: 

SymbolTable: 
v-->4

Output: 
1
2
30
3

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
7
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
8
ExeStack: 

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
6
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
9
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
7
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
7
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
8
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
8
ExeStack: 

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
6
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
9
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
6
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
9
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
2
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
2
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
3
ExeStack: 

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
4
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
1
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
4
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
{ v= 20;{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= 20
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
{for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1};Print (  v* 10)}

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->20

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
16
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
16
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
16
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 

FileTable

Heap

LockTable

Id: 
16
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->0

Output: 

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
16
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
16
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->0

Output: 
0

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
16
ExeStack: 

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
17
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
17
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
17
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0

FileTable

Heap

LockTable

Id: 
17
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
17
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
fork{Print ( v); v= v+ 1}
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
17
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->1

Output: 
0
1

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
17
ExeStack: 

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
18
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
 v= v+ 1
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
18
ExeStack: 
{Print ( v); v= v+ 1}

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
18
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
for ( v= 0(v< 3) v= v+ 1) then fork{Print ( v); v= v+ 1}
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1

FileTable

Heap

LockTable

Id: 
18
ExeStack: 
Print ( v)
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
18
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
15
ExeStack: 
Print (  v* 10)

SymbolTable: 
v-->3

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
18
ExeStack: 
 v= v+ 1

SymbolTable: 
v-->2

Output: 
0
1
2

FileTable

Heap

LockTable

Id: 
15
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

Id: 
18
ExeStack: 

SymbolTable: 
v-->3

Output: 
0
1
2
30

FileTable

Heap

LockTable

